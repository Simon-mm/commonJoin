<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <!--Spring除了控制器不扫描，剩下的业务逻辑组件都要，包括Dao和Service-->
    <context:component-scan base-package="com.xm">
        <!--扫描排除不写 use-default-filter="false" -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--0.导入外部配置文件-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <!--1.配置数据源-->
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="maxPoolSize" value="${maxPoolSize}"/>
        <property name="minPoolSize" value="${minPoolSize}"/>
    </bean>

    <!--2.配置jdbcTemplate操作数据库——pass，而使用mybatis操作数据库-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定配置文件位置-->
        <property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="pooledDataSource"/>
        <!--指定xml映射文件的位置-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml"/>
    </bean>
    <!--把每一个dao接口的实现加入到ioc容器-->
<!--    <mybatis-spring:scan base-package="com.xm.dao"/>-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定dao接口所在的包-->
        <property name="basePackage" value="com.xm.dao"/>
    </bean>

    <!--3.配置事务控制；配置事务管理器，让它控制住数据源里面的连接的关闭和提交-->
    <bean id="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>

    <!--4.基于xml配置，配置事务，哪些方法切入事务要写切入表达式-->
    <aop:config>
        <!--配置切入表达式-->
        <aop:pointcut id="txPoint" expression="execution(* com.xm.service.*.*(..))"/>
        <aop:advisor advice-ref="myAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!--开启基于注解的事务：没有这句话，注解就没有用-->
    <tx:annotation-driven transaction-manager="manager"/>
    <!--5.配置事务增强，事务属性，事务建议-->
    <tx:advice id="myAdvice" transaction-manager="manager">
        <!--配置事务属性-->
        <tx:attributes>
<!--            <tx:method name="*" rollback-for="java.lang.Exception"/>-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>